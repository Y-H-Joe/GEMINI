wkdir="/analysis1/yihang_analysis/pipeline"
bam_folder="/analysis1/yihang_analysis/pipeline/data/bam"

bwa='bwa'
threads=96
samtools='samtools'
kaiju='kaiju'
python3='python3'
Rscript='Rscript'
kaiju_addTaxonNames='kaiju-addTaxonNames'
kaiju_nodes='/home/yihang/software/kaijudb_nr_euk/nodes.dmp'
kaiju_fmi='/home/yihang/software/kaijudb_nr_euk/nr_euk/kaiju_db_nr_euk.fmi'
kaiju_names='/home/yihang/software/kaijudb_nr_euk/names.dmp'
bamToFastq='bamToFastq'
seqkit='seqkit'
humann='/home/yihang/anaconda3/envs/pipeline2/bin/humann3'
humann_renorm_table = '/home/yihang/anaconda3/envs/pipeline2/bin/humann_renorm_table'
humann_regroup_table = '/home/yihang/anaconda3/envs/pipeline2/bin/humann_regroup_table'
humann_join_tables = '/home/yihang/anaconda3/envs/pipeline2/bin/humann_join_tables'
humann_split_stratified_table = '/home/yihang/anaconda3/envs/pipeline2/bin/humann_split_stratified_table'
humann_rename_table = '/home/yihang/anaconda3/envs/pipeline2/bin/humann_rename_table'


import pandas as pd
import os
import re
import sys
import mwgx_pipeline as mp

config="GEMINI/config.tsv"
df_config=pd.read_csv(config,sep='\t')

samples_list, assembly_list, assembly_loc_list, group_list, group_name_list, bam_list=mp.check_config(df_config)

taxa_level=['taxaID','superkingdom','phylum','class','order','family','genus','species']
os.chdir(wkdir)
bam=list(df_config['bam_dir'])
bam_basename=[os.path.basename(x) for x in bam_list]

cpu_count=os.cpu_count()

rule all:
    input:
        expand("metabolism/humann3/ori_results/{sample}_pathabundance.tsv",sample = samples_list)

# %%
def return_bam(wildcards):
    bam=bam_list[samples_list.index(wildcards.sample)]
    return bam
rule bam2fastq:
    input:
        return_bam
    output:
        "data/reads/{sample}.fq.gz"
    log:
        "log/bam2fastq.{sample}.log"
    benchmark:
        "benchmark/bam2fastq.{sample}.benchmark"
    threads: 2
    run:
        shell("{bamToFastq} -i {input} -fq data/reads/{wildcards.sample}.fq.tmp")
        shell("cat data/reads/{fq}.tmp | {seqkit} rmdup --threads {threads} -s -o data/reads/{wildcards.sample}.fq.gz")
        shell("rm data/reads/{wildcards.sample}.fq.tmp")

# %%
rule humann_upstream:
    input:
        "data/reads/{sample}.fq.gz"
    output:
        "metabolism/humann3/ori_results/{sample}_pathabundance.tsv",
        "metabolism/humann3/ori_results/{sample}_pathcoverage.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies.tsv"
    log:
        "log/humann.{sample}.log"
    benchmark:
        "benchmark/humann.{sample}.benchmark"
    threads: 4
    run:
        shell("{humann} --input {input}  --output metabolism/humann3/ori_results/ "
        " --search-mode uniref90 --diamond-options '--block-size 10 --fast' "
        " --threads {threads} --memory-use maximum")

# %%
rule humann_downstream:
    input:
        "metabolism/humann3/ori_results/{sample}_pathabundance.tsv",
        "metabolism/humann3/ori_results/{sample}_pathcoverage.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies.tsv"
    output:
        "metabolism/humann3/ori_results/{sample}_pathabundance_cpm.tsv",
        "metabolism/humann3/ori_results/{sample}_pathcoverage_cpm.tsv",
        "metabolism/humann3/ori_results/{sample}_pathabundance_relab.tsv",
        "metabolism/humann3/ori_results/{sample}_pathcoverage_relab.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_cpm_level4ec.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_relab_level4ec.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_cpm_ko.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_relab_ko.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_cpm_eggnog.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_relab_eggnog.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_cpm_pfam.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_relab_pfam.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_cpm_rxn.tsv",
        "metabolism/humann3/ori_results/{sample}_genefamilies_relab_rxn.tsv"
    log:
        "log/humann_downstream.{sample}.log"
    benchmark:
        "benchmark/humann_downstream.{sample}.benchmark"
    run:
        # normalize
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --units relab &>/dev/null")
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --units cpm &>/dev/null")
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_pathabundance.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_pathabundance_relab.tsv "
              " --units relab &>/dev/null")
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_pathabundance.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_pathabundance_cpm.tsv "
              " --units cpm &>/dev/null")
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_pathcoverage.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_pathcoverage_relab.tsv "
              " --units relab &>/dev/null")
        shell("{humann_renorm_table} --input metabolism/humann3/ori_results/{wildcards.sample}_pathcoverage.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_pathcoverage_cpm.tsv "
              " --units cpm &>/dev/null")
        # regroup
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm_level4ec.tsv --groups uniref90_level4ec &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab_level4ec.tsv --groups uniref90_level4ec &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm_ko.tsv --groups uniref90_ko &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab_ko.tsv --groups uniref90_ko &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm_eggnog.tsv --groups uniref90_eggnog &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab_eggnog.tsv --groups uniref90_eggnog &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm_pfam.tsv --groups uniref90_pfam &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab_pfam.tsv --groups uniref90_pfam &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_cpm_rxn.tsv --groups uniref90_rxn &>/dev/null")
        shell("{humann_regroup_table} --input metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab.tsv "
              " --output metabolism/humann3/ori_results/{wildcards.sample}_genefamilies_relab_rxn.tsv --groups uniref90_rxn &>/dev/null")

# %%
rule humann_regroup:
    input:
        expand("metabolism/humann3/ori_results/{sample}_pathabundance_cpm.tsv",sample = samples_list)
    output:
        "humann_regroup.done"
    run:
        for c,name in enumerate(group_name_list):
            samples = [samples_list[i] for i in group_list[c]]
            for sample in samples:
                cmd = "mkdir -p metabolism/humann3/ori_results/{group} ; cp metabolism/humann3/ori_results/{sample}*tsv metabolism/humann3/ori_results/{group}"\
                    .format(group = name, sample = sample)
                os.system(cmd)
        shell("touch humann_regroup.done")


